# -*- coding: utf-8 -*-
"""Untitled48.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ovqVbpjIvBK00TcPiNHp-hcc-nM4vxYS
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import random as rd

k_map={
    ' US.':1,
    ' Europe.':2,
    ' Japan.':3
}

df=pd.read_csv('cars.csv')
df['category']=df[' brand'].map(k_map)
df=df.drop(columns=[' brand'])
df=df.dropna(how='any')
df[' cubicinches']=df[' cubicinches'].replace([' '],rd.randint(100,450))
df[' cubicinches']=df[' cubicinches'].astype(int)
df[' weightlbs']=df[' weightlbs'].replace([' '],rd.randint(1900,4500))
df[' weightlbs']=df[' weightlbs'].astype(int)
display(df)

X=df.iloc[:,:-1].values
Y=df.iloc[:,-1].values

from sklearn.cluster import KMeans
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)
plt.plot(range(1, 11), wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

from sklearn.cluster import KMeans
kmeans=KMeans(n_clusters=3,init='k-means++',random_state=42)
y_pred=kmeans.fit_predict(X)

y_pred

from sklearn import metrics
metrics.adjusted_rand_score(Y,y_pred)

metrics.adjusted_mutual_info_score(Y,y_pred)